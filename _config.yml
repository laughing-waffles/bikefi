title: "BikeFi" # the name of your site, e.g. ACME Corp.
tagline: "Finance your next set of wheels"
email: contact@bikefi.net
description: >- # this means to ignore newlines until "baseurl:"
  BikeFi connects the best bikes on the market with the best financing terms available. 
author: name
url: "" # the base hostname & protocol for your site, e.g. http://example.com
baseurl: "/" # the subpath of your site, e.g. /blog
incremental: true
#twitter:
#  username: 
#  card: summary #keep this to generate a twitter share card
permalink: pretty
plugins:
  - jekyll-paginate-v2
  - jekyll-feed
  - jekyll-sitemap
  - jekyll-target-blank
  - jekyll-include-cache
  - jekyll-responsive-image
sass:
  sass_dir: assets/css
include: 
  - pages
exclude: 
  - scrapy
collections:
  pages:
    output: true
defaults:
  - scope:
      path: ''
    values:
      layout: page
  - scope:
      path: _posts/bike-shops
    values:
      layout: dealers-single
      permalink: /bike-shops/:slug/
  - scope:
      path: _posts/products
    values:
      layout: shop-single
      permalink: /:slug/
  - scope:
      path: assets/*
    values:
      sitemap: false
  - scope:
      path: 'tag'
    values:
      sitemap: false
  - scope:
      path: 'collection'
    values:
      sitemap: false
pagination:
  enabled: false
  per_page: 30
  indexpage: index
  permalink: /page/:num
  title: ':title - page :num'
  sort_field: 'date'
  sort_reverse: true
  category: 'posts'
  trail: 
    before: 2
    after: 2
autopages:
  enabled: false
  categories: 
    layouts: 
      - srp.html
    title: :cat
    permalink: /:cat/
    slugify:
      mode: default
      case: true
  tags:
    layouts: 
      - srp.html
    title: :tag
    permalink: /tag/:tag/
    slugify:
      mode: default
      case: true
cloudinary: # https://nhoizey.github.io/jekyll-cloudinary/
  cloud_name: bikefi
  verbose: false
  only_prod: true
  # origin_url: https://cdn.bikefi.net
  presets:
    default:
      min_width: 320
      max_width: 1600
      fallback_max_width: 1600
      steps: 5
      loading: lazy
    productImage:
      min_width: 343
      max_width: 738
      fallback_max_width: 738
      steps: 5
      attributes:
        class: d-block img-fluid
    productCarouselNavbar: 
      min_width: 125
      max_width: 250
      fallback_max_width: 250
      steps: 5
      attributes:
        class: nav-link d-block p-1 img-fluid
        width: 125px
    srpProductImageVertical: 
      min_width: 125
      max_width: 250
      fallback_max_width: 250
      steps: 5
      attributes:
        class: mt-5 img-fluid
        width: 190px
    srpProductImageHorizontal: 
      min_width: 125
      max_width: 250
      fallback_max_width: 250
      steps: 5
      attributes:
        class: mt-3 img-fluid
gtm-parameters: "?utm_source=bikefi.net&utm_medium=url&utm_campaign=friendly_neighborhood_spiderman" # https://ga-dev-tools.web.app/campaign-url-builder/
compress_html:
  clippings: all
  comments:
    - '<!-- '
    - ' -->'
  endings:
    - html
    - head
    - body
    - li
    - dt
    - dd
    - rt
    - rp
    - optgroup
    - option
    - colgroup
    - caption
    - thead
    - tbody
    - tfoot
    - tr
    - td
    - th
  profile: false
  blanklines: false
  ignore:
    envs: []
responsive_image:
  # [Required]
  # Path to the image template.
  template: _includes/responsive-image.html #THIS ONE
  # [Optional, Default: 85]
  # Quality to use when resizing images.
  default_quality: 85
  # [Optional, Default: []]
  # An array of resize configuration objects. Each object must contain at least
  # a `width` value.
  sizes:
    - width: 150  # [Required] How wide the resized image will be.
      height: 150
      quality: 80 # [Optional] Overrides default_quality for this size.
    - width: 300
      height: 300
      quality: 80
    - width: 600
      height: 600
      quality: 80
    - width: 850
      height: 850
      quality: 90
    - width: 1200
      height: 1200
      quality: 90
  # [Optional, Default: false]
  # Rotate resized images depending on their EXIF rotation attribute. Useful for
  # working with JPGs directly from digital cameras and smartphones
  auto_rotate: true
  # [Optional, Default: false]
  # Strip EXIF and other JPEG profiles. Helps to minimize JPEG size and win friends
  # at Google PageSpeed.
  strip: true
  # [Optional, Default: assets]
  # The base directory where assets are stored. This is used to determine the
  # `dirname` value in `output_path_format` below.
  base_path: assets/images/full
  # [Optional, Default: assets/resized/%{filename}-%{width}x%{height}.%{extension}]
  # The template used when generating filenames for resized images. Must be a
  # relative path.
  #
  # Parameters available are:
  #   %{dirname}     Directory of the file relative to `base_path` (assets/sub/dir/some-file.jpg => sub/dir)
  #   %{basename}    Basename of the file (assets/some-file.jpg => some-file.jpg)
  #   %{filename}    Basename without the extension (assets/some-file.jpg => some-file)
  #   %{extension}   Extension of the file (assets/some-file.jpg => jpg)
  #   %{width}       Width of the resized image
  #   %{height}      Height of the resized image
  #
  output_path_format: assets/images/resized/%{width}/%{basename}
# [Optional, Default: true]
  # Whether or not to save the generated assets into the source folder.
  save_to_source: false
# [Optional, Default: false]
  # Cache the result of {% responsive_image %} and {% responsive_image_block %}
  # tags. See the "Caching" section of the README for more information.
  cache: true
# [Optional, Default: []]
  # By default, only images referenced by the responsive_image and responsive_image_block
  # tags are resized. Here you can set a list of paths or path globs to resize other
  # images. This is useful for resizing images which will be referenced from stylesheets.
  extra_images:
    - uploads/*/*/*/*.{jpeg,jpg}